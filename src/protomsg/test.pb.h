/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_FETCHAPI_TEST_PB_H_INCLUDED
#define PB_FETCHAPI_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _FetchAPI_GetState { 
    pb_callback_t name; 
    bool has_id;
    int32_t id; 
} FetchAPI_GetState;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FetchAPI_GetState_init_default           {{{NULL}, NULL}, false, 0}
#define FetchAPI_GetState_init_zero              {{{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define FetchAPI_GetState_name_tag               1
#define FetchAPI_GetState_id_tag                 2

/* Struct field encoding specification for nanopb */
#define FetchAPI_GetState_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              1) \
X(a, STATIC,   OPTIONAL, INT32,    id,                2)
#define FetchAPI_GetState_CALLBACK pb_default_field_callback
#define FetchAPI_GetState_DEFAULT NULL

extern const pb_msgdesc_t FetchAPI_GetState_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FetchAPI_GetState_fields &FetchAPI_GetState_msg

/* Maximum encoded size of messages (where known) */
/* FetchAPI_GetState_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
